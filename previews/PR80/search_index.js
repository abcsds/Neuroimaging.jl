var documenterSearchIndex = {"docs":
[{"location":"assr/functions/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"assr/functions/","page":"API","title":"API","text":"A number of functions are provided for the processing of SSR data.","category":"page"},{"location":"assr/functions/#Import","page":"API","title":"Import","text":"","category":"section"},{"location":"assr/functions/","page":"API","title":"API","text":"read_SSR","category":"page"},{"location":"assr/functions/#EEG.read_SSR","page":"API","title":"EEG.read_SSR","text":"Read SSR from file or IO stream\n\nRead a file or IO stream and store the data in an SSR type.\n\nMatching .mat files are read and modulation frequency information extracted. Failing that, user passed arguments are used or the modulation frequency is extracted from the file name.\n\nArguments\n\nfname: Name of the file to be read\nmin_epoch_length: Minimum epoch length in samples. Shorter epochs will be removed (0)\nmax_epoch_length: Maximum epoch length in samples. Longer epochs will be removed (0 = all)\nvalid_triggers: Triggers that are considered valid, others are removed ([1,2])\nstimulation_amplitude: Amplitude of stimulation (NaN)\nmodulationrate: Modulation frequency of SSR stimulation (NaN)\ncarrier_frequency: Carrier frequency (NaN)\nparticipant_name: Name of participant (\"\")\nremove_first: Number of epochs to be removed from start of recording (0)\nmax_epochs: Maximum number of epochs to retain (0 = all)\nenv (nothing)\nbkt (\"\")\n\nSupported file formats\n\nBIOSEMI (.bdf)\n\n\n\n\n\n","category":"function"},{"location":"assr/functions/#Preprocessing","page":"API","title":"Preprocessing","text":"","category":"section"},{"location":"assr/functions/#Filtering","page":"API","title":"Filtering","text":"","category":"section"},{"location":"assr/functions/","page":"API","title":"API","text":"highpass_filter(::SSR)","category":"page"},{"location":"assr/functions/#EEG.highpass_filter-Tuple{SSR}","page":"API","title":"EEG.highpass_filter","text":"highpass_filter(a::SSR; cutOff::Real=2, fs::Real=samplingrate(a), order::Int=3, tolerance::Real=0.01, kwargs...)\n\nApplly a high pass filter.\n\nA zero phase high pass filter is applied to the data using filtfilt. A check is performed to ensure the filter does not affect the modulation rate. The filter coefficents are stored in the processing field.\n\nExample\n\na = highpass_filter(a)\n# or\na = highpass_filter(a, cutOff = 1)\n\n\n\n\n\n","category":"method"},{"location":"assr/functions/#Referencing","page":"API","title":"Referencing","text":"","category":"section"},{"location":"assr/functions/","page":"API","title":"API","text":"rereference(::SSR, ::AbstractString)","category":"page"},{"location":"assr/functions/#EEG.rereference-Tuple{SSR, AbstractString}","page":"API","title":"EEG.rereference","text":"rereference(a::SSR, refChan::Union{AbstractString, Array{AbstractString}}; kwargs...)\n\nReference data to specified channel(s).\n\nExample\n\na = rereference(a, \"Cz\")\n# or\na = rereference(a, [\"P9\", \"P10\"])\n\n\n\n\n\n","category":"method"},{"location":"assr/functions/#Plotting","page":"API","title":"Plotting","text":"","category":"section"},{"location":"assr/functions/","page":"API","title":"API","text":"plot_timeseries(::SSR)","category":"page"},{"location":"assr/functions/#EEG.plot_timeseries-Tuple{SSR}","page":"API","title":"EEG.plot_timeseries","text":"plot_timeseries(s::SSR; channels, fs, kwargs)\n\nPlot an SSR recording.\n\nPlot detailed single channel or general multichanel figure depending on how many channels are requested.\n\nInput\n\ns: SSR type\nchannels: The channels you want to plot, all if not specified\nfs: Sample rate\nOther optional arguements are passed to the Plots.jl functions\n\nOutput\n\nReturns a figure\n\nExample\n\nplot1 = plot_timeseries(s, channels=[\"P6\", \"Cz\"], plot_points=8192*4)\ndraw(PDF(\"timeseries.pdf\", 10inch, 6inch), plot1)\n\n\n\n\n\n","category":"method"},{"location":"api/#Library","page":"API","title":"Library","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = EEG","category":"page"},{"location":"api/#Module","page":"API","title":"Module","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"EEG","category":"page"},{"location":"api/#Preprocessing","page":"API","title":"Preprocessing","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"highpass_filter\nlowpass_filter\nbandpass_filter\ncompensate_for_filter\nepoch_rejection\npeak2peak\nchannel_rejection\nremove_template\nrereference","category":"page"},{"location":"api/#EEG.highpass_filter","page":"API","title":"EEG.highpass_filter","text":"High pass filter applied in forward and reverse direction\n\nSimply a wrapper for the DSP.jl functions\n\nArguments\n\nsignals: Signal data in the format samples x channels\ncutOff: Cut off frequency in Hz\nfs: Sampling rate\norder: Filter orde\n\nReturns\n\nfiltered signal\nfilter used on signal\n\n\n\n\n\nhighpass_filter(a::SSR; cutOff::Real=2, fs::Real=samplingrate(a), order::Int=3, tolerance::Real=0.01, kwargs...)\n\nApplly a high pass filter.\n\nA zero phase high pass filter is applied to the data using filtfilt. A check is performed to ensure the filter does not affect the modulation rate. The filter coefficents are stored in the processing field.\n\nExample\n\na = highpass_filter(a)\n# or\na = highpass_filter(a, cutOff = 1)\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.lowpass_filter","page":"API","title":"EEG.lowpass_filter","text":"Low pass filter applied in forward and reverse direction\n\nSimply a wrapper for the DSP.jl functions\n\nInput\n\nsignals: Signal data in the format samples x channels\ncutOff: Cut off frequency in Hz\nfs: Sampling rate\norder: Filter orde\n\nOutput\n\nfiltered signal\nfilter used on signal\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.bandpass_filter","page":"API","title":"EEG.bandpass_filter","text":"Band pass filter\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.compensate_for_filter","page":"API","title":"EEG.compensate_for_filter","text":"Recover the spectrum of signal by compensating for filtering done.\n\nArguments\n\nfilter: The filter used on the spectrum\nspectrum: Spectrum of signal\nfrequencies: Array of frequencies you want to apply the compensation to\nfs: Sampling rate\n\nReturns\n\nSpectrum of the signal after comensating for the filter\n\nTODO\n\nExtend this to arbitrary number of dimensions rather than the hard coded 3\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.epoch_rejection","page":"API","title":"EEG.epoch_rejection","text":"Reject epochs based on the maximum peak to peak voltage within an epoch across all channels\n\nArguments\n\nepochs: Array containing the epoch data in the format samples x epochs x channels\nretain_percentage: The percentage of epochs to retain\nrejection_method: Method to be used for epoch rejection (peak2peak)\n\nReturns\n\nAn array with a reduced amount of entries in the epochs dimension\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.peak2peak","page":"API","title":"EEG.peak2peak","text":"Find the peak to peak value for each epoch to be returned to epoch_rejection()\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.channel_rejection","page":"API","title":"EEG.channel_rejection","text":"Reject channels with too great a variance.\n\nRejection can be based on a threshold or dynamicly chosen based on the variation of all channels.\n\nArguments\n\nsignals: Array of data in format samples x channels\nthreshold_abs: Absolute threshold to remove channels with variance above this value\nthreshold_std: Reject channels with a variance more than n times the std of all channels\n\nReturns\n\nAn array indicating the channels to be kept\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.remove_template","page":"API","title":"EEG.remove_template","text":"Remove a template signal from each column of an array\n\nArguments\n\nsignals: Original signals to be modified  (samples x channels)\ntemplate: Template to remove from each signal\n\nReturns\n\nSignals with template removed\n\n\n\n\n\n","category":"function"},{"location":"api/#EEG.rereference","page":"API","title":"EEG.rereference","text":"Re reference a signals to specific signal channel by index.\n\nIf multiple channels are specififed, their average is used as the reference.\n\nArguments\n\nsignals: Original signals to be modified\nrefChan: Index of channels to be used as reference\n\nReturns\n\nRereferenced signals\n\n\n\n\n\nRe-reference a signals to specific signal channel by name.\n\nIf multiple channels are specififed, their average is used as the reference. Or you can specify to use the average reference.\n\nArguments\n\nsignals: Original signals to be modified\nrefChan: List of channels to be used as reference or average\nchanNames: List of channel names associated with signals array\n\nReturns\n\nRereferenced signals\n\n\n\n\n\nrereference(a::SSR, refChan::Union{AbstractString, Array{AbstractString}}; kwargs...)\n\nReference data to specified channel(s).\n\nExample\n\na = rereference(a, \"Cz\")\n# or\na = rereference(a, [\"P9\", \"P10\"])\n\n\n\n\n\n","category":"function"},{"location":"assr/examples/#Examples","page":"Example","title":"Examples","text":"","category":"section"},{"location":"assr/examples/#Plot-single-and-multi-channel-data","page":"Example","title":"Plot single and multi channel data","text":"","category":"section"},{"location":"assr/examples/","page":"Example","title":"Example","text":"using EEG\n\ns = read_SSR(\"file.bdf\")\ns = highpass_filter(s)\ns = rereference(s, \"Cz\")\ns = trim_channel(s, 8192*80, start = 8192*50)\n\nplot_timeseries(s, channels=\"P6\")\nplot_timeseries(s)","category":"page"},{"location":"assr/examples/","page":"Example","title":"Example","text":"(Image: Single Channel) (Image: Multi Channel)","category":"page"},{"location":"#EEG.jl-Manual","page":"Home","title":"EEG.jl Manual","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Process EEG files in Julia.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For research only. Not for clinical use. Use at your own risk.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = EEG","category":"page"},{"location":"assr/assr/","page":"Overview","title":"Overview","text":"SSR","category":"page"},{"location":"assr/assr/#EEG.SSR","page":"Overview","title":"EEG.SSR","text":"Type for storing steady state response (SSR) data.\n\nThe minimum required information for SSR recording is stored in the type. Additional information can be stored in the processing field. To facilitate processing, specific names are used in the processing dictionary.\n\nFields\n\ndata: contains the recorded data\ntrigers: contains information about timing for creation of epochs\nsystem_codes: contains system information\nsamplingrate: the sampling rate of the data\nmodulationrate: the modulation rate of the stimulus\nreference_channel: the channel the data has been referenced to\nfile_path and file_name: where the file was read in from\nchannel_names: the names of the channels\nprocessing: dictionary type to store analysis\nheader: additional information read from the file\n\nAdditional processing fields\n\nThe following standard names are used when saving data to the processing dictionary.\n\nName: The identifier for the participant\nSide: Side of stimulation\nCarrier_Frequency: Carrier frequency of the stimulus\nAmplitude: Amplitude of the stimulus\nepochs: The epochs extracted from the recording\nsweeps: The extracted sweeps from the recording\n\nExample\n\nPut an example here\n\ns = SSR(\"filename\")\n\n\n\n\n\n","category":"type"},{"location":"types/","page":"Types","title":"Types","text":"A number of types are provided to handle different types of data. Functions are provided to perform common operations on each type.","category":"page"}]
}
